//| mill-version: 1.0.0

package build

import mill._, scalalib._, scalajslib._
import mill.scalajslib.api._

object Versions {
    val scala3 = "3.7.0"
    val sjs = "1.19.0"
    val sjsdom = "2.8.0"
    val scalatest = "3.2.19"
    val ew = "0.2.0"
    val tuplez = "0.4.0"
    val scaladomtestutils = "18.0.0"
    val urldsl = "0.6.2"
    val upickle = "2.0.0"

    // Externally observable
    val cats                  = "2.12.0"
    val catsEffect            = "3.5.4"
    val microlibs             = "4.1.0"
    val monocle2              = "2.1.0"
    val monocle3              = "3.2.0"
    val scala2                = "2.13.15"
    val scalaJsDom            = "2.8.0"
    val sourcecode            = "0.4.2"

    // Internal
    val betterMonadicFor      = "0.3.1"
    val catsTestkitScalaTest  = "2.1.5"
    val disciplineScalaTest   = "2.1.5"
    val fastTextEncoding      = "1.0.6"
    val kindProjector         = "0.13.3"
    val macrotaskExecutor     = "1.1.1"
    val nyaya                 = "1.0.0"
    val reactJs               = "18.3.1"
    val scalaJsJavaTime       = "1.0.0"
    val scalaJsSecureRandom   = "1.0.0"
    val scalaTest             = "3.2.11"
    val sizzleJs              = "2.3.0"
    val univEq                = "2.0.0"
    val utest                 = "0.8.5"
}

trait WebModule extends ScalaJSModule { 
    def scalaVersion = Versions.scala3
    def scalaJSVersion = Versions.sjs

    def scalacOptions = Seq(
      "-rewrite",
      "-source", "3.4-migration",
      "-feature",
      "-language:implicitConversions"
    )
    /* 
    val cats                 = Def.setting("org.typelevel"                 %%% "cats-core"                               % Ver.cats)
    val catsEffect           = Def.setting("org.typelevel"                 %%% "cats-effect"                             % Ver.catsEffect)
    val catsEffectLaws       = Def.setting("org.typelevel"                 %%% "cats-effect-laws"                        % Ver.catsEffect)
    val catsEffectTestkit    = Def.setting("org.typelevel"                 %%% "cats-effect-testkit"                     % Ver.catsEffect)
    val catsTestkit          = Def.setting("org.typelevel"                 %%% "cats-testkit"                            % Ver.cats)
    val catsTestkitScalaTest = Def.setting("org.typelevel"                 %%% "cats-testkit-scalatest"                  % Ver.catsTestkitScalaTest)
    val disciplineScalaTest  = Def.setting("org.typelevel"                 %%% "discipline-scalatest"                    % Ver.disciplineScalaTest)
    val macrotaskExecutor    = Def.setting("org.scala-js"                  %%% "scala-js-macrotask-executor"             % Ver.macrotaskExecutor)
    val microlibsCompileTime = Def.setting("com.github.japgolly.microlibs" %%% "compile-time"                            % Ver.microlibs)
    val microlibsTestUtil    = Def.setting("com.github.japgolly.microlibs" %%% "test-util"                               % Ver.microlibs)
    val microlibsTypes       = Def.setting("com.github.japgolly.microlibs" %%% "types"                                   % Ver.microlibs)
    val monocle2             = Def.setting("com.github.julien-truffaut"    %%% "monocle-core"                            % Ver.monocle2 cross CrossVersion.for3Use2_13 excludeAll(ExclusionRule(organization = "org.typelevel")))
    val monocle3             = Def.setting("dev.optics"                    %%% "monocle-core"                            % Ver.monocle3)
    val nyayaGen             = Def.setting("com.github.japgolly.nyaya"     %%% "nyaya-gen"                               % Ver.nyaya)
    val nyayaProp            = Def.setting("com.github.japgolly.nyaya"     %%% "nyaya-prop"                              % Ver.nyaya)
    val nyayaTest            = Def.setting("com.github.japgolly.nyaya"     %%% "nyaya-test"                              % Ver.nyaya)
    val scalaCompiler        = Def.setting("org.scala-lang"                  % "scala-compiler"                          % scalaVersion.value)
    val scalaJsDom           = Def.setting("org.scala-js"                  %%% "scalajs-dom"                             % Ver.scalaJsDom)
    val scalaJsJavaTime      = Def.setting("org.scala-js"                  %%% "scalajs-java-time"                       % Ver.scalaJsJavaTime cross CrossVersion.for3Use2_13)
    val scalaJsSecureRandom  = Def.setting("org.scala-js"                  %%% "scalajs-fake-insecure-java-securerandom" % Ver.scalaJsSecureRandom cross CrossVersion.for3Use2_13)
    val scalaReflect         = Def.setting("org.scala-lang"                  % "scala-reflect"                           % scalaVersion.value)
    val scalaTest            = Def.setting("org.scalatest"                 %%% "scalatest"                               % Ver.scalaTest)
    val sourcecode           = Def.setting("com.lihaoyi"                   %%% "sourcecode"                              % Ver.sourcecode)
    val univEq               = Def.setting("com.github.japgolly.univeq"    %%% "univeq"                                  % Ver.univEq)
    val univEqCats           = Def.setting("com.github.japgolly.univeq"    %%% "univeq-cats"                             % Ver.univEq)
    val utest                = Def.setting("com.lihaoyi"                   %%% "utest"                                   % Ver.utest)
     */
    def mvnDeps = Seq(
      mvn"org.scala-js::scalajs-dom::${Versions.sjsdom}",
      mvn"org.typelevel::cats-core::${Versions.cats}",
      mvn"org.typelevel::cats-effect::${Versions.catsEffect}",
      mvn"org.typelevel::cats-effect-laws::${Versions.catsEffect}",
      mvn"org.typelevel::cats-effect-testkit::${Versions.catsEffect}",
      mvn"org.typelevel::cats-testkit::${Versions.cats}",
      mvn"org.typelevel::cats-testkit-scalatest::${Versions.catsTestkitScalaTest}",
      mvn"org.typelevel::discipline-scalatest::${Versions.disciplineScalaTest}",
      mvn"org.scala-js::scala-js-macrotask-executor::${Versions.macrotaskExecutor}",
      mvn"com.github.japgolly.microlibs::compile-time::${Versions.microlibs}",
      mvn"com.github.japgolly.microlibs::test-util::${Versions.microlibs}",
      mvn"com.github.japgolly.microlibs::types::${Versions.microlibs}"
    )

    object test extends ScalaJSTests with TestModule.ScalaTest {
        def scalaTestVersion = Versions.scalatest

        def mvnDeps = super.mvnDeps() ++ Seq(
            mvn"com.raquo::domtestutils::${Versions.scaladomtestutils}",
        )

        def scalacOptions = Seq(
            "-rewrite",
            "-source", "3.4-migration",
            "-feature",
            "-language:implicitConversions"
        )

        def jsEnvConfig = Task { JsEnvConfig.JsDom() }
    }
}

object reactjs extends WebModule {
}
